/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { ServiceClientOptions } from "@azure/ms-rest-js";
import * as msRest from "@azure/ms-rest-js";

/**
 * An interface representing DeviceStatusResponseBody.
 */
export interface DeviceStatusResponseBody {
  status?: string;
  reason?: string;
}

/**
 * An interface representing DeviceSubscription.
 */
export interface DeviceSubscription {
  deviceId?: string;
  subscriptionType?: string;
  callbackUrl?: string;
  createdAt?: Date;
}

/**
 * An interface representing SubscriptionCreateOrUpdateBody.
 */
export interface SubscriptionCreateOrUpdateBody {
  callbackUrl: string;
}

/**
 * An interface representing DeviceSubscriptionWithStatus.
 */
export interface DeviceSubscriptionWithStatus {
  deviceId?: string;
  subscriptionType?: string;
  callbackUrl?: string;
  createdAt?: Date;
  status?: string;
}

/**
 * An interface representing MessageBody.
 */
export interface MessageBody {
  data: { [propertyName: string]: any };
  properties?: { [propertyName: string]: string };
  componentName?: string;
  creationTimeUtc?: Date;
}

/**
 * An interface representing RegistrationBody.
 */
export interface RegistrationBody {
  modelId?: string;
}

/**
 * An interface representing ReportedPropertiesPatch.
 */
export interface ReportedPropertiesPatch {
  patch: { [propertyName: string]: any };
}

/**
 * An interface representing GetTwinOKResponseTwinProperties.
 */
export interface GetTwinOKResponseTwinProperties {
  desired?: any;
  reported?: any;
}

/**
 * An interface representing GetTwinOKResponseTwin.
 */
export interface GetTwinOKResponseTwin {
  properties?: GetTwinOKResponseTwinProperties;
}

/**
 * An interface representing GetTwinOKResponse.
 */
export interface GetTwinOKResponse {
  twin?: GetTwinOKResponseTwin;
}

/**
 * An interface representing DeviceBridgeOptions.
 */
export interface DeviceBridgeOptions extends ServiceClientOptions {
  baseUri?: string;
}

/**
 * Optional Parameters.
 */
export interface DeviceBridgeCreateOrUpdateConnectionStatusSubscriptionOptionalParams extends msRest.RequestOptionsBase {
  body?: SubscriptionCreateOrUpdateBody;
}

/**
 * Optional Parameters.
 */
export interface DeviceBridgeCreateOrUpdateC2DMessageSubscriptionOptionalParams extends msRest.RequestOptionsBase {
  body?: SubscriptionCreateOrUpdateBody;
}

/**
 * Optional Parameters.
 */
export interface DeviceBridgeSendMessageOptionalParams extends msRest.RequestOptionsBase {
  body?: MessageBody;
}

/**
 * Optional Parameters.
 */
export interface DeviceBridgeCreateOrUpdateMethodsSubscriptionOptionalParams extends msRest.RequestOptionsBase {
  body?: SubscriptionCreateOrUpdateBody;
}

/**
 * Optional Parameters.
 */
export interface DeviceBridgeRegisterOptionalParams extends msRest.RequestOptionsBase {
  body?: RegistrationBody;
}

/**
 * Optional Parameters.
 */
export interface DeviceBridgeUpdateReportedPropertiesOptionalParams extends msRest.RequestOptionsBase {
  body?: ReportedPropertiesPatch;
}

/**
 * Optional Parameters.
 */
export interface DeviceBridgeCreateOrUpdateDesiredPropertiesSubscriptionOptionalParams extends msRest.RequestOptionsBase {
  body?: SubscriptionCreateOrUpdateBody;
}

/**
 * Contains response data for the getCurrentConnectionStatus operation.
 */
export type GetCurrentConnectionStatusResponse = DeviceStatusResponseBody & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeviceStatusResponseBody;
    };
};

/**
 * Contains response data for the getConnectionStatusSubscription operation.
 */
export type GetConnectionStatusSubscriptionResponse = DeviceSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeviceSubscription;
    };
};

/**
 * Contains response data for the createOrUpdateConnectionStatusSubscription operation.
 */
export type CreateOrUpdateConnectionStatusSubscriptionResponse = DeviceSubscription & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeviceSubscription;
    };
};

/**
 * Contains response data for the getC2DMessageSubscription operation.
 */
export type GetC2DMessageSubscriptionResponse = DeviceSubscriptionWithStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeviceSubscriptionWithStatus;
    };
};

/**
 * Contains response data for the createOrUpdateC2DMessageSubscription operation.
 */
export type CreateOrUpdateC2DMessageSubscriptionResponse = DeviceSubscriptionWithStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeviceSubscriptionWithStatus;
    };
};

/**
 * Contains response data for the getMethodsSubscription operation.
 */
export type GetMethodsSubscriptionResponse = DeviceSubscriptionWithStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeviceSubscriptionWithStatus;
    };
};

/**
 * Contains response data for the createOrUpdateMethodsSubscription operation.
 */
export type CreateOrUpdateMethodsSubscriptionResponse = DeviceSubscriptionWithStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeviceSubscriptionWithStatus;
    };
};

/**
 * Contains response data for the getTwin operation.
 */
export type GetTwinResponse = GetTwinOKResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: GetTwinOKResponse;
    };
};

/**
 * Contains response data for the getDesiredPropertiesSubscription operation.
 */
export type GetDesiredPropertiesSubscriptionResponse = DeviceSubscriptionWithStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeviceSubscriptionWithStatus;
    };
};

/**
 * Contains response data for the createOrUpdateDesiredPropertiesSubscription operation.
 */
export type CreateOrUpdateDesiredPropertiesSubscriptionResponse = DeviceSubscriptionWithStatus & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DeviceSubscriptionWithStatus;
    };
};
